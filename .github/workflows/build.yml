name: 'build all'

on:
  workflow_dispatch:
  push:
    branches:
      - 'none'
    paths-ignore:
      - 'docs/**'
      - "*.md"

env:
  APPNAME: USBImager
  HOMEBREW_NO_INSTALL_CLEANUP: true
  HOMEBREW_NO_ENV_HINTS: true
  HOMEBREW_CLEANUP_MAX_AGE_DAYS: 999
  HOMEBREW_NO_ANALYTICS: true
  HOMEBREW_NO_AUTO_UPDATE: true

jobs:
  build_all:
    runs-on: ${{ matrix.os }}

    strategy:
      # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/running-variations-of-jobs-in-a-workflow
      matrix:
        os: ['macos-13', 'macos-14', 'ubuntu-latest']
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          fetch-tags: true
          
      # - name: Update brew
      #   if: startsWith(matrix.os, 'macos')
      #   run: |
      #     brew update
      #     brew install intltool create-dmg

      - name: set vars
        id: envconf
        run: |
          echo "VERSION=$(git describe --abbrev=0)" >> $GITHUB_ENV
          echo "TAG=$(git describe)" >> $GITHUB_ENV          

      - name: Make macos/linux
        working-directory: ./src
        run: make package

      - name: Make deb
        if: matrix.os == 'ubuntu-latest'
        working-directory: ./src
        run: make deb    

      - name: Upload Artifacts zip
        uses: actions/upload-artifact@v4
        with:
          # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#github-context
          overwrite: true
          name: ${{ env.APPNAME }}-${{ matrix.os }}-${{ github.sha }}
          path: |
            **/*.zip
            **/*.deb

  release:
    needs: build_all
    runs-on: ubuntu-latest
    permissions:
      contents: write    

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      # - name: Create GitHub Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   with:
      #     tag_name: ${{ github.ref_name }}
      #     release_name: Release ${{ github.ref_name }}
      #     draft: false
      #     prerelease: false

      # - name: Upload Release Assets
      #   run: |
      #     for artifact in ./artifacts/*; do
      #       echo "Uploading $artifact"
      #       gh release upload "${{ steps.create_release.outputs.id }}" "$artifact"
      #     done

      - name: make release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.event.repository.name }}-${{ github.ref_name }}
          # body: macos-${{ matrix.architecture }}
          artifacts: artifacts/*
          generateReleaseNotes: true
          makeLatest: true
          allowUpdates: true
          tag: 1.0.10
            
      # - name: Release
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     tag_name: 1.0.10
      #     generate_release_notes: true
      #     make_latest: true
      #     files: |
      #       **/*.zip
      #       **/*.deb
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # disabled because DMG create fails intermittently: https://github.com/actions/runner-images/issues/7522
      # - name: Unzip app
      #   run: unzip -o *.zip

      # - name: Create DMG
      #   if: true
      #   run: |
      #     create-dmg --volname "${{ env.APPNAME }}" --volicon src/misc/usbimager.icns --eula LICENSE  --app-drop-link 50 50 "${{ env.APPNAME }}-${{ env.TAG }}.dmg" "${{ env.APPNAME }}.app"

      # - name: Upload Artifacts DMG
      #   if: true
      #   uses: actions/upload-artifact@v4
      #   with:
      #     overwrite: true
      #     # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#github-context
      #     # branch name: ${{ github.ref_name }}
      #     name: DMG-${{ env.APPNAME }}-${{ matrix.os }}-${{ github.sha }}
      #     path: |
      #       **/*.dmg
        
