name: build and release

on:
  workflow_dispatch:
  push:
    branches:
      - 'none'
    paths-ignore:
      - 'docs/**'
      - "*.md"

env:
  APPNAME: USBImager
  HOMEBREW_NO_INSTALL_CLEANUP: true
  HOMEBREW_NO_ENV_HINTS: true
  HOMEBREW_CLEANUP_MAX_AGE_DAYS: 999
  HOMEBREW_NO_ANALYTICS: true
  HOMEBREW_NO_AUTO_UPDATE: true
  TAG: 1.0.10

jobs:
  build_all:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ['macos-13', 'macos-14', 'ubuntu-latest']
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0
          fetch-tags: true
          
      # - name: Update brew (needed for DMG creation)
      #   if: startsWith(matrix.os, 'macos')
      #   run: |
      #     brew update
      #     brew install create-dmg

      - name: set vars
        id: envconf
        run: |
          echo "VERSION=$(git describe --abbrev=0)" >> $GITHUB_ENV
          echo "TAG=$(git describe)" >> $GITHUB_ENV          

      - name: Make macos/linux
        working-directory: ./src
        run: make package

      - name: Make deb
        if: matrix.os == 'ubuntu-latest'
        working-directory: ./src
        run: make deb    

      - name: Upload Artifacts zip
        uses: actions/upload-artifact@v4
        with:
          # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#github-context
          overwrite: true
          name: ${{ env.APPNAME }}-${{ matrix.os }}-${{ github.sha }}
          path: |
            **/*.zip
            **/*.deb
          
      # disabled because DMG create fails intermittently: https://github.com/actions/runner-images/issues/7522
      # - name: Unzip app
      #   run: unzip -o *.zip

      # - name: Create DMG
      #   if: true
      #   run: |
      #     create-dmg --volname "${{ env.APPNAME }}" --volicon src/misc/usbimager.icns --eula LICENSE  --app-drop-link 50 50 "${{ env.APPNAME }}-${{ env.TAG }}.dmg" "${{ env.APPNAME }}.app"

      # - name: Upload Artifacts DMG
      #   if: true
      #   uses: actions/upload-artifact@v4
      #   with:
      #     overwrite: true
      #     # https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/accessing-contextual-information-about-workflow-runs#github-context
      #     # branch name: ${{ github.ref_name }}
      #     name: DMG-${{ env.APPNAME }}-${{ matrix.os }}-${{ github.sha }}
      #     path: |
      #       **/*.dmg

  build-w64:
    if: true
    runs-on: windows-2019
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - uses: msys2/setup-msys2@v2
        with:
          update: true
          msystem: MINGW64
          install: >-
            base-devel
            make
            gcc
            zlib
            zlib-devel
            mingw-w64-clang-x86_64-zlib
            mingw-w64-x86_64-zlib
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-gcc-libs
            mingw-w64-x86_64-make
            mingw-w64-x86_64-gdb
            mingw-w64-clang-x86_64-make
            zip
            unzip

      - name: print env
        run: env

      - name: Build
        working-directory: src
        shell: msys2 {0}
        run: make package
          
      - name: List files
        run: |
          pwd
          echo ${{ github.workspace }}
          ls -alh 
          find .            
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APPNAME }}
          path: |
            **/*.exe
      
  release:
    # needs: [build_all]
    needs: [build_all, build-w64]
    runs-on: ubuntu-latest
    permissions:
      contents: write    

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        
        with:
          path: ./artifacts
          merge-multiple: true
          
      - name: List artifacts
        run: |
          pwd
          echo ${{ github.workspace }}/artifacts
          ls -alh ${{ github.workspace }}
          find .       

      - name: make release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.event.repository.name }}-${{ github.ref_name }}
          # body: macos-${{ matrix.architecture }}
          artifacts: "artifacts/*.zip,artifacts/*.deb,artifacts/*.exe"
          generateReleaseNotes: true
          makeLatest: true
          allowUpdates: true
          tag: ${{ env.TAG}}
            


        
